# ==============================================================================
# File generated by Visual System Integrator
# VSI Build time: 2020-02-28T14:57:19
# Script generation time: 2020-03-12 04:16:49
# ==============================================================================
if {[get_projects u96_pl] == ""} {
	# Save previews path
	if {[info exists scriptDir]} {
		set  calledfromdir $scriptDir
	}
	set scriptDir [file dirname [info script]]
    # Procedure to define interconnect type
    proc intc_vlnv_type { {interface ""} } {
        if { [is_axi_stream ${interface}] } {
            return "xilinx.com:ip:axis_interconnect"
        }
    	
        return "xilinx.com:ip:axi_interconnect"
    }
# Temporary using of original project generation
source ${scriptDir}/u96_pl._tcl_
# ------------------------------------------------------------------------------
# Re set previews path
if {[info exists calledfromdir]} {
	set  scriptDir $calledfromdir
} else {
	unset scriptDir
}
# ------------------------------------------------------------------------------
return ""
proc vsi_get_pr_region_clocks {pr_set} {
	if {$pr_set == "1"} {
		return [list \
		        "CLOCKREGION_X1Y2:CLOCKREGION_X1Y2" \
		        ]
	}
		return ""
}

	
	source ${scriptDir}/../../.platform/ultra96_platform/u96_pl.tcl

	global tcl_platform
	add_ip_repo_path ${scriptDir}/../../hls/system_1/u96_pl

	update_ip_catalog -rebuild

	if {![info exist ::env(VSI_INSTALL)]} {
		puts "Attention! VSI install not defined, some functionality as simulation can be broken"
	} else {
		set axi_protocol_checker [get_ip_name axi_protocol_checker]
		set_property \
			-name {xsim.elaborate.xelab.more_options} \
			-value "-L $axi_protocol_checker -L smartconnect_v1_0 --sv_root ${::env(VSI_INSTALL)}/host/[string tolower [lindex $tcl_platform(os) 0]].x86_64/lib/rpc_simulator --sv_lib simulator_intf.so" \
			-objects [get_filesets sim_1]
		set_property \
			-name {questa.simulate.vsim.more_options} \
			-value [list -dpicpppath /usr/bin/gcc -sv_root ${::env(VSI_INSTALL)}/host/[string tolower [lindex $tcl_platform(os) 0]].x86_64/lib/rpc_simulator -sv_lib simulator_intf_questa] \
			-objects [get_filesets sim_1]
	}
}
delete_bd_objs -quiet [get_bd_cell /u96_pl]	
create_bd_cell -quiet -type hier /u96_pl


set system [get_bd_cell /u96_pl]
create_bd_pin -dir I -type clk /u96_pl/clk_0
create_bd_pin -dir I -type rst /u96_pl/rst_2
create_bd_pin -dir I -type rst /u96_pl/rst_0
create_bd_pin -dir I -type rst /u96_pl/rst_1
create_bd_pin -dir I -type rst /u96_pl/rst_3
create_bd_pin -dir I -type rst /u96_pl/rst_4
create_bd_pin -dir I -type rst /u96_pl/rst_8
create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 /u96_pl/common_intf_CTRL
create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 /u96_pl/common_intf_M_AXI_1
create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 /u96_pl/common_intf_M_AXI_2
create_bd_pin -dir I /u96_pl/decoup_en
create_bd_pin -dir O /u96_pl/irq_i_1
create_bd_pin -dir O /u96_pl/irq_i_2
create_bd_pin -dir O /u96_pl/irq_i_3
create_bd_pin -dir O /u96_pl/irq_i_4
create_bd_pin -dir O /u96_pl/irq_i_5
create_bd_pin -dir O /u96_pl/irq_i_6
create_bd_pin -dir O /u96_pl/irq_i_7
create_bd_pin -dir O /u96_pl/irq_i_8
create_bd_pin -dir I -type clk /u96_pl/clk_5
create_bd_pin -dir I -type clk /u96_pl/clk_6
create_bd_pin -dir I -type clk /u96_pl/clk_7

safe_connect_bd_net /p_u96_pl/zynq_ultra_ps_e_0/pl_clk0 /u96_pl/clk_0
safe_connect_bd_net /p_u96_pl/proc_sys_reset_0/interconnect_aresetn /u96_pl/rst_2
safe_connect_bd_net /p_u96_pl/proc_sys_reset_0/peripheral_aresetn /u96_pl/rst_0
safe_connect_bd_net /p_u96_pl/proc_sys_reset_0/bus_struct_reset /u96_pl/rst_1
safe_connect_bd_net /p_u96_pl/proc_sys_reset_0/mb_reset /u96_pl/rst_3
safe_connect_bd_net /p_u96_pl/proc_sys_reset_0/peripheral_reset /u96_pl/rst_4
safe_connect_bd_net /p_u96_pl/zynq_ultra_ps_e_0/pl_resetn0 /u96_pl/rst_8
safe_connect_bd_net /p_u96_pl/vsi_common_interface_0/decoup_en /u96_pl/decoup_en
safe_connect_bd_net /p_u96_pl/vsi_common_interface_0/irq_i_1 /u96_pl/irq_i_1
safe_connect_bd_net /p_u96_pl/vsi_common_interface_0/irq_i_2 /u96_pl/irq_i_2
safe_connect_bd_net /p_u96_pl/vsi_common_interface_0/irq_i_3 /u96_pl/irq_i_3
safe_connect_bd_net /p_u96_pl/vsi_common_interface_0/irq_i_4 /u96_pl/irq_i_4
safe_connect_bd_net /p_u96_pl/vsi_common_interface_0/irq_i_5 /u96_pl/irq_i_5
safe_connect_bd_net /p_u96_pl/vsi_common_interface_0/irq_i_6 /u96_pl/irq_i_6
safe_connect_bd_net /p_u96_pl/vsi_common_interface_0/irq_i_7 /u96_pl/irq_i_7
safe_connect_bd_net /p_u96_pl/vsi_common_interface_0/irq_i_8 /u96_pl/irq_i_8
safe_connect_bd_net /p_u96_pl/zynq_ultra_ps_e_0/pl_clk1 /u96_pl/clk_5
safe_connect_bd_net /p_u96_pl/zynq_ultra_ps_e_0/pl_clk2 /u96_pl/clk_6
safe_connect_bd_net /p_u96_pl/zynq_ultra_ps_e_0/pl_clk3 /u96_pl/clk_7
connect_with_check \
    [ get_bd_intf_pin /p_u96_pl/vsi_common_interface_0/CTRL ] \
    [ get_bd_intf_pin /u96_pl/common_intf_CTRL ]
sys_intf_termination \
    [ get_bd_cells /u96_pl ] \
    [ get_bd_intf_pin /u96_pl/common_intf_CTRL ]
connect_with_check \
    [ get_bd_intf_pin /p_u96_pl/vsi_common_interface_0/M_AXI_1 ] \
    [ get_bd_intf_pin /u96_pl/common_intf_M_AXI_1 ]
sys_intf_termination \
    [ get_bd_cells /u96_pl ] \
    [ get_bd_intf_pin /u96_pl/common_intf_M_AXI_1 ]
connect_with_check \
    [ get_bd_intf_pin /p_u96_pl/vsi_common_interface_0/M_AXI_2 ] \
    [ get_bd_intf_pin /u96_pl/common_intf_M_AXI_2 ]
sys_intf_termination \
    [ get_bd_cells /u96_pl ] \
    [ get_bd_intf_pin /u96_pl/common_intf_M_AXI_2 ]

# ---------------------------- Place RTL IP's start ----------------------------

# ----------------------------- Place RTL IP's end -----------------------------
# ----------------------- Place HLS Wizard blocks start ------------------------

# ------------------------ Place HLS Wizard blocks end -------------------------
# ----------------------------- Connect pins start -----------------------------


# ------------------------------ Connect pins end ------------------------------
# ----------------------  Place adapters interfaces start ----------------------











# -----------------------  Place adapters interfaces end -----------------------
# -----  Place pass through interfaces ad, target_pr_hierarcyapters start ------

# ----------------  Place pass through interfaces adapters end -----------------
# -------------------------- connect_interfaces start --------------------------











# --------------------------- connect_interfaces end ---------------------------
# -------------------- Connect passthrough interfaces start --------------------

# -------------------------- Connect passthrough end ---------------------------
# -------------------------- Traces maintenance start --------------------------

# --------------------------- Traces maintenance end ---------------------------

catch { unset reconnection_list }; list
# Build region: 0
#
# LOD hierarchy: vsi_system/u96_pl/pr_set_0_1
source -n ${scriptDir}/u96_pl/0/pr_set_0_1.tcl
set partial_hierarhy [get_bd_cells /u96_pl/pr_set_0_1]
# Preserve group name
set region_hierarchy [create_bd_cell -quiet -type hier /u96_pl/region_hierarchy_0]
set region_ip [create_bd_cell -quiet -type hier /u96_pl/region_hierarchy_0/region_0_ip]
				
move_bd_cells ${region_ip} ${partial_hierarhy}
post_interface_clk_rst_connect
intercon_control_clk_rst
push reconnection_list [get_connection_list ${region_ip}]
set pr_definition [hier_to_pr ${region_ip} partial_hier_0 vsi_system_u96_pl_pr_set_0_1]
delete_bd_objs -quiet ${region_hierarchy}
#
# LOD hierarchy: vsi_system/u96_pl/pr_set_0_0
source -n ${scriptDir}/u96_pl/0/pr_set_0_0.tcl
set partial_hierarhy [get_bd_cells /u96_pl/pr_set_0_0]
# Preserve group name
set region_hierarchy [create_bd_cell -quiet -type hier /u96_pl/region_hierarchy_0]
set region_ip [create_bd_cell -quiet -type hier /u96_pl/region_hierarchy_0/region_0_ip]
				
move_bd_cells ${region_ip} ${partial_hierarhy}
post_interface_clk_rst_connect
intercon_control_clk_rst
push reconnection_list [get_connection_list ${region_ip}]
set pr_definition [hier_to_pr ${region_ip} partial_hier_0 vsi_system_u96_pl_pr_set_0_0]
# Interface matching
reconnection_by_lists ${reconnection_list}
# Clean for next PR
pr_replace ${region_ip} ${pr_definition}
set pr_ip [get_bd_cell /u96_pl/region_hierarchy_0/region_0_ip]
set partial_hier_0 [decoupler_cover ${pr_ip} 0]
unset reconnection_list
make_xdc_constarin

post_processing ${system}
assign_bd_address
save_bd_design
set_property synth_checkpoint_mode Hierarchical [get_files [get_property FILE_NAME [current_bd_design]]]
set wrap_file [make_wrapper -files [get_files [get_files [current_bd_design].bd]] -top]
add_file -norecurse $wrap_file
update_compile_order -fileset sources_1
set obj [get_runs synth_1]
catch {
    set_property STEPS.WRITE_BITSTREAM.ARGS.BIN_FILE true [get_runs impl_1]
    set_property -name {STEPS.ROUTE_DESIGN.ARGS.MORE OPTIONS} -value -ultrathreads -objects [get_runs impl_1]
}
generate_target all [get_files [get_property file_name [current_bd_design]]]
catch {
    write_hwdef -force -file ${scriptDir}/../../.platform/ultra96_platform/u96_pl.hdf
}
# ------------------------------------------------------------------------------
# Re set previews path
if {[info exists calledfromdir]} {
	set  scriptDir $calledfromdir
} else {
	unset scriptDir
}
# ------------------------------------------------------------------------------
