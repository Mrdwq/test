__soa_out = ""
__soa_out += """
# ==============================================================================
# This file is generated by VSI compiler. Invokes vivado to generate reports
#                                         for ultilization and power
# ILANG version:"""
__soa_nodes[1].val = str(utils.ilang_version)
__soa_out += __soa_nodes[1].val
__soa_out += """
# Build Date:"""
__soa_nodes[3].val = str(utils.build_time)
__soa_out += __soa_nodes[3].val
__soa_out += """
# ==============================================================================
if {$argc != 3} {
    puts \"Usage : gen_power_report part solution_number\"
    exit -1
}
lassign $argv part solution ip_name
puts \"part $part,  $solution , $ip_name \"
create_project power_project_$solution ./power_projects -part $part -force
set flist {}
puts \"./${ip_name}/solution{$solution}/impl/ip/hdl/ip/\"
set files [glob -directory ./${ip_name}/solution${solution}/impl/ip/hdl/ip/ *.v*]
foreach file $files {
    lappend flist $file
}
set files [glob -directory ./${ip_name}/solution${solution}/syn/verilog/ *.v]
foreach file $files {
    lappend flist $file
}
add_files -norecurse $flist
update_compile_order -fileset sources_1
set files [glob -directory  ./${ip_name}/solution${solution}/impl/ip/constraints/ *.xdc]
add_files -fileset constrs_1 -norecurse $files
set_property -name {STEPS.SYNTH_DESIGN.ARGS.MORE OPTIONS} -value -no_iobuf -objects [get_runs synth_1]
launch_runs synth_1
wait_on_run synth_1
open_run synth_1 -name synth_1
report_power -format xml -file power_solution.${solution}.xml
report_utilization -format xml -file utilization_solution.${solution}.xml
close_project
exit 0
"""
if __soa_last_callback:__soa_last_callback(__soa_state(), {**globals(), **locals()})
